name: "ECR deploy"

on:
    workflow_dispatch:

jobs:
    build-docker-container:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write
            issues: write


        steps:
            - name: Checkout code
              uses: actions/checkout@v4.1.1
              with:
               lfs: true

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4.0.1
              with:
                 aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                 aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                 aws-region: ${{ vars.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2.0.1

            - name: Set outputs
              id: vars
              run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            - name: Check outputs
              run: echo ${{ steps.vars.outputs.sha_short }}

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}
                ECR_REPOSITORY: ${{ vars.ECR_REPO }}
              run: |
                # Build a docker container and
                # push it to ECR so that it can
                # be deployed to ECS.
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
                echo deployed image is $image